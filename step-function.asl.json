{
  "Comment": "JEREMY RULES!!!",
  "StartAt": "Format Channel History",
  "States": {

    "Format Channel History": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "formatHistory",
        "Payload": {
          "history.$": "$.Payload.history"
        }
      },
      "TimeoutSeconds": 300,
      "Next": "Process Superfluous Info"
    },

    "Process Superfluous Info": {
      "Type": "Parallel",
      "Next": "Save to CSV",
      "Branches": [
        {
          "StartAt": "Process Images",
          "States": {

            "Process Images": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "processImages",
                "Payload": {
                  "history.$": "$.Payload.history"
                }
              },
              "TimeoutSeconds": 300,
              "End": true
            }
          }

        },
        {
          "StartAt": "Extract Sentences",
          "States": {

            "Extract Sentences": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "extractSentences",
                "Payload": {
                  "history.$": "$.Payload.history"
                }
              },
              "TimeoutSeconds": 300,
              "Next": "Process Sentiment"
            },

            "Process Sentiment": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "getSentiment",
                "Payload": {
                  "history.$": "$.Payload.history"
                }
              },
              "TimeoutSeconds": 300,
              "End": true
            }

          }
        }
      ]
    },

    "Save to CSV": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "saveSpreadsheet",
        "Payload": {
          "history.$": "$.Payload.history"
        }
      },
      "TimeoutSeconds": 300,
      "End": true
    }

  }
}